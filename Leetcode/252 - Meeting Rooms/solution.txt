SOLUTION:
To determine if a person can attend all meetings without conflicts, we check for overlapping intervals by first sorting the meetings by their start times.

Key idea: If any meeting starts before the previous one ends, then there is an overlap and the person cannot attend all meetings.

1) Sort the intervals:
   - Sort the list of intervals in ascending order based on their start time.
   - This ensures we can compare each interval with the one directly before it.

2) Traverse the sorted intervals:
   - For each interval from index 1 to n-1:
     - If the current interval’s start time is less than the previous interval’s end time, a conflict exists.
     - In that case, return false.

3) If no overlaps are found in the loop, return true, indicating all meetings can be attended without conflict.

This approach ensures we detect any overlapping time slots efficiently.

TIME-COMPLEXITY: O(n log n) – Sorting the intervals takes O(n log n), and checking for overlaps is O(n).
SPACE-COMPLEXITY: O(1) – No extra space is used apart from a few variables (assuming in-place sorting).