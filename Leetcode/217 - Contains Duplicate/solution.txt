SOLUTION:
To check whether an array contains any duplicate elements, we use a hash set to keep track of all previously seen numbers.

Key idea: As we iterate through the array, we check if the current number already exists in the set. If yes, a duplicate is found and we return true. If not, we add it to the set and continue.

1) Initialize:
   - Create an empty set to store the unique elements seen so far.

2) Traverse the array:
   - For each element `num` in the array:
     - If `num` is already in the set, return true (duplicate found).
     - Otherwise, insert `num` into the set.

3) If the loop completes without returning, return false, meaning all elements are unique.

This approach ensures we scan the array only once and check for duplicates in constant time per element using the set.

TIME-COMPLEXITY: O(n) - Each of the n elements is processed once with constant-time set operations.
SPACE-COMPLEXITY: O(n) - In the worst case, all n elements are stored in the set.